# Azure startup commands for Django
# This script runs after Oryx build completion

# Find the extracted app path (Oryx extracts to a temp directory)
APP_PATH=$(find /tmp -maxdepth 1 -name "8ddb*" -type d 2>/dev/null | head -1)
if [ -z "$APP_PATH" ]; then
    APP_PATH="/home/site/wwwroot"
fi

echo "Using app path: $APP_PATH"

# Activate virtual environment created by Oryx
if [ -f "$APP_PATH/antenv/bin/activate" ]; then
    . $APP_PATH/antenv/bin/activate
    echo "Virtual environment activated"
else
    echo "Virtual environment not found, using system Python"
fi

# Set working directory to the app path
cd $APP_PATH

# Check if MySQL is ready before proceeding
echo "Waiting for MySQL connection..."
python -c "
import os
import time
try:
    import MySQLdb
except ImportError:
    import pymysql
    pymysql.install_as_MySQLdb()
    import MySQLdb

# Get database settings from environment variables
db_host = os.environ.get('AZURE_MYSQL_HOST', 'servicesbladi.mysql.database.azure.com')
db_user = os.environ.get('AZURE_MYSQL_USER', 'servicesbladiadmin')
db_password = os.environ.get('AZURE_MYSQL_PASSWORD', 'Aa123456a')
db_name = os.environ.get('AZURE_MYSQL_NAME', 'servicesbladi')

print(f'Connecting to MySQL at {db_host} with user {db_user}')

count = 0
while count < 10:
    try:
        MySQLdb.connect(
            host=db_host,
            user=db_user,
            passwd=db_password,
            db=db_name,
            ssl=False
        )
        print('MySQL connection successful!')
        break
    except Exception as e:
        print(f'MySQL connection attempt {count+1}/10 failed: {e}')
        count += 1
        time.sleep(5)
" || echo "MySQL connection check failed, but continuing anyway"

# Run migrations with error handling
python manage.py migrate --noinput || echo "Migration failed but continuing"

# Create cache table with error handling
python manage.py createcachetable --noinput || echo "Cache table creation failed but continuing"

# Start Gunicorn using the activated virtual environment
exec gunicorn servicesbladi.wsgi:application --bind 0.0.0.0:8000 --workers 2
